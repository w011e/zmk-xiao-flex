/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/greek.dtsi"
#include "../zmk-nodefree-config/international_chars/german.dtsi"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC   |  1  |  2  |  3   |  4   |  5   |                    |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB   |  Q  |  W  |  E   |  R   |  T   |                    |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL  |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT  |  Z  |  X  |  C   |  V   |  B   |                    |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            // |    2   |  2  | f   | 6    | 4    | 1    |                    | 2    | 1     | w     | s    | n     |  a    |

            bindings = <
&kp EQUAL     &kp N1            &kp N2    &kp N3     &kp N4     &kp N5                                  &kp N6     &kp N7    &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB       &kp Q             &kp W     &kp E      &kp R      &kp T                                   &kp Z      &kp U     &kp I      &kp O    &kp P     &de_ue
&kp CAPSLOCK  &kp A             &kp S     &kp D      &kp F      &kp G                                   &kp H      &kp J     &kp K      &kp L    &de_oe    &de_ae
&kp LSHFT     &kp Y             &kp X     &kp C      &kp V      &kp B                                   &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
&kp GRAVE     &kp CAPS          &kp LEFT  &kp RIGHT                           &kp UP                    &kp DOWN   &kp LBKT  &kp RBKT
&kp LCTRL     &kp LEFT_COMMAND            &kp RGUI   &kp RCTRL
                                          &kp BSPC   &kp DEL    &kp LEFT_ALT  &kp RIGHT_ALT  &kp ENTER  &kp SPACE
              &mo 1             &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_1 {
            bindings = <
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4                           &trans        &trans      &trans  &trans  &trans  &trans
&bootloader  &trans        &trans        &trans            &trans        &trans                                 &trans        &trans      &trans  &trans  &trans  &trans
&kp ESC      &trans        &trans        &trans            &trans        &trans                                 &trans        &trans      &trans  &trans  &trans  &trans
&trans       &trans        &trans        &trans            &trans        &trans                                 &trans        &trans      &trans  &trans  &trans  &trans
&trans       &trans        &trans        &kp C_PLAY_PAUSE                              &kp C_VOLUME_UP          &kp C_VOL_DN  &kp C_MUTE  &trans
&trans       &trans                      &trans            &trans
                                         &trans            &trans        &trans        &trans           &trans  &trans
             &trans        &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp F1  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &bootloader
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans                  &trans          &trans  &trans  &trans
&trans  &trans          &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans
            >;
        };
    };
};
